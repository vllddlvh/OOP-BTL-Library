package view;

import controller.LoginController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.entity.Member;
import model.entity.Staff;
import model.entity.User;

/**
 * JPanel hiển thị thông tin cá nhân của người dùng.
 * Cung cấp các chức năng xem và sửa thông tin cá nhân, đổi mật khẩu.
 * 
 * @author ADMIN
 */
public class ThongTinCuaToiJPanel extends javax.swing.JPanel {
    
    private boolean editable = false;
    private User currentUser;

    /**
     * Tạo mới JPanel hiển thị thông tin cá nhân.
     */
    public ThongTinCuaToiJPanel() {
        initComponents();
        currentUser = LoginController.getAcc();
        
        initOnStart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDateOfBirth = new javax.swing.JTextField();
        jTextFieldContact = new javax.swing.JTextField();
        jTextFieldLastName = new javax.swing.JTextField();
        jTextFieldFirstName = new javax.swing.JTextField();
        JTextFieldID = new javax.swing.JTextField();
        jlbID = new javax.swing.JLabel();
        jlbFirstName = new javax.swing.JLabel();
        jlbLastName = new javax.swing.JLabel();
        jlbContact = new javax.swing.JLabel();
        jlbDateOfBirth = new javax.swing.JLabel();
        buttonEditInfo = new javax.swing.JButton();
        buttonChangePassword = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(128, 175, 129));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Thông tin người dùng");

        jlbID.setBackground(new java.awt.Color(255, 255, 255));
        jlbID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbID.setForeground(new java.awt.Color(255, 255, 255));
        jlbID.setText("ID:");

        jlbFirstName.setBackground(new java.awt.Color(255, 255, 255));
        jlbFirstName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbFirstName.setForeground(new java.awt.Color(255, 255, 255));
        jlbFirstName.setText("Tên");

        jlbLastName.setBackground(new java.awt.Color(255, 255, 255));
        jlbLastName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbLastName.setForeground(new java.awt.Color(255, 255, 255));
        jlbLastName.setText("Họ và tên đệm");

        jlbContact.setBackground(new java.awt.Color(255, 255, 255));
        jlbContact.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbContact.setForeground(new java.awt.Color(255, 255, 255));
        jlbContact.setText("Email");

        jlbDateOfBirth.setBackground(new java.awt.Color(255, 255, 255));
        jlbDateOfBirth.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jlbDateOfBirth.setForeground(new java.awt.Color(255, 255, 255));
        jlbDateOfBirth.setText("Ngày tháng năm sinh");

        buttonEditInfo.setBackground(new java.awt.Color(80, 141, 78));
        buttonEditInfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonEditInfo.setText("Sửa thông tin cá nhân");
        buttonEditInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEditInfoMouseClicked(evt);
            }
        });

        buttonChangePassword.setBackground(new java.awt.Color(80, 141, 78));
        buttonChangePassword.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonChangePassword.setText("Đổi mật khẩu");
        buttonChangePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonChangePasswordMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlbFirstName)
                    .addComponent(jlbLastName)
                    .addComponent(jlbDateOfBirth)
                    .addComponent(jlbContact)
                    .addComponent(jlbID))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEditInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jTextFieldContact, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                        .addComponent(jTextFieldLastName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JTextFieldID, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextFieldDateOfBirth)))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jlbID))
                    .addComponent(JTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbFirstName))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbLastName))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbContact))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbDateOfBirth)
                    .addComponent(jTextFieldDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(buttonEditInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Phương thức khởi tạo và thiết lập giao diện ban đầu.
     * Hiển thị thông tin của người dùng hiện tại và vô hiệu hóa các trường nhập liệu.
     */
    private void initOnStart() {
        JTextFieldID.setText(currentUser.getID());
        jTextFieldFirstName.setText(currentUser.getFirstName());
        jTextFieldLastName.setText(currentUser.getLastName());
        jTextFieldContact.setText(currentUser.getContact());
        JTextFieldID.setEditable(false);
        jTextFieldContact.setEditable(false);
        jTextFieldDateOfBirth.setEditable(false);
        jTextFieldFirstName.setEditable(false);
        jTextFieldLastName.setEditable(false);
        
        if (currentUser instanceof Member member) {
            jTextFieldDateOfBirth.setText(member.getDateOfBirth());
        } else if (currentUser instanceof Staff staff) {
            jTextFieldDateOfBirth.setText(staff.getJobTitle());
            jlbDateOfBirth.setText("Vị trí công việc:");
        }
    } 
    
    /**
     * Sự kiện khi nhấn nút "Sửa thông tin cá nhân".
     * Kiểm soát chuyển đổi giữa chế độ xem và chế độ chỉnh sửa.
     *
     * @param evt Sự kiện chuột.
     */
    private void buttonEditInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditInfoMouseClicked
        if (editable) {
            // Xác nhận lưu thay đổi
            int result = JOptionPane.showOptionDialog(
                    this,
                    "Xác nhận các thay đổi?",
                    "Xác nhận",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    new String[]{"Cancel", "Save"},
                    null
            );

            if (result != 1) {
                return;
            }

            if (currentUser instanceof Member member) {
                updateInfoMember(member);
            } else if (currentUser instanceof Staff staff) {
                updateInfoStaff(staff);
            }

            initOnStart();
            editable = false;
        } else {
            // Chuyển sang trạng thái chỉnh sửa
            jTextFieldContact.setEditable(true);
            jTextFieldDateOfBirth.setEditable(true);
            jTextFieldFirstName.setEditable(true);
            jTextFieldLastName.setEditable(true);
            editable = true;
        }
    }//GEN-LAST:event_buttonEditInfoMouseClicked

    /**
     * Cập nhật thông tin của người dùng loại Member.
     *
     * @param currentUser Người dùng hiện tại (Member).
     */
    private void updateInfoMember(Member currentUser) {
        currentUser.setContact(jTextFieldContact.getText());
        currentUser.setDateOfBirth(jTextFieldDateOfBirth.getText());
        currentUser.setFirstName(jTextFieldFirstName.getText());
        currentUser.setLastName(jTextFieldLastName.getText());
            
        try {
            if (model.dao.MemberDAO.updateMember(currentUser)) {
                JOptionPane.showMessageDialog(this, "Sửa thông tin thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thông tin thất bại");
            }
                
        } catch (SQLException ex) {
            Logger.getLogger(ThongTinCuaToiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    /**
     * Cập nhật thông tin của người dùng loại Staff.
     *
     * @param currentUser Người dùng hiện tại (Staff).
     */
    private void updateInfoStaff(Staff currentUser) {
        currentUser.setContact(jTextFieldContact.getText());
        currentUser.setJobTitle(jTextFieldDateOfBirth.getText());
        currentUser.setFirstName(jTextFieldFirstName.getText());
        currentUser.setLastName(jTextFieldLastName.getText());
            
        try {
            if (model.dao.StaffDAO.updateStaff(currentUser)) {
                JOptionPane.showMessageDialog(this, "Sửa thông tin thành công");
            } else {
                JOptionPane.showMessageDialog(this, "Sửa thông tin thất bại");
            }
                
        } catch (SQLException ex) {
            Logger.getLogger(ThongTinCuaToiJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    /**
     * Sự kiện khi nhấn nút "Đổi mật khẩu".
     * Chuyển sang giao diện đổi mật khẩu hoặc hủy các thay đổi.
     *
     * @param evt Sự kiện chuột.
     */
    private void buttonChangePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonChangePasswordMouseClicked
        if (editable) {
            // Hủy thay đổi và quay về trạng thái ban đầu
            initOnStart();
            editable = false;
        } else {
            // Mở giao diện đổi mật khẩu
            DoiMatKhauJFrame changeP = new DoiMatKhauJFrame();
            changeP.setAlwaysOnTop(true);
            changeP.setVisible(true);
        }
    }//GEN-LAST:event_buttonChangePasswordMouseClicked

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTextFieldID;
    private javax.swing.JButton buttonChangePassword;
    private javax.swing.JButton buttonEditInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldContact;
    private javax.swing.JTextField jTextFieldDateOfBirth;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JLabel jlbContact;
    private javax.swing.JLabel jlbDateOfBirth;
    private javax.swing.JLabel jlbFirstName;
    private javax.swing.JLabel jlbID;
    private javax.swing.JLabel jlbLastName;
    // End of variables declaration//GEN-END:variables
}
