package view;

import java.io.File;
import javax.swing.JFrame;

public class ChonFileAnhJFrame extends javax.swing.JFrame {
    private static File fileImage;

    public static File getFileImage() {
        return fileImage;
    }

    public static void setFileImage(File fileImage) {
        ChonFileAnhJFrame.fileImage = fileImage;
    }
    /**
     * Creates new form JFrameChonFileAnh
     */
    public ChonFileAnhJFrame() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFileChooserFileAnh = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooserFileAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooserFileAnhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jFileChooserFileAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooserFileAnh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooserFileAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooserFileAnhActionPerformed
    String command = evt.getActionCommand();
    if (command.equals(javax.swing.JFileChooser.APPROVE_SELECTION)) {
        File selectedFile = jFileChooserFileAnh.getSelectedFile();
        String fileName = selectedFile.getName().toLowerCase();

        // Kiểm tra định dạng ảnh hợp lệ
        if (fileName.endsWith(".jpg") || fileName.endsWith(".jpeg") ||
            fileName.endsWith(".png") || fileName.endsWith(".gif") ||
            fileName.endsWith(".bmp")) {

            // Đường dẫn đến thư mục "src/main/java/image/"
            File destDir = new File("src/main/java/image");
            if (!destDir.exists()) {
                destDir.mkdirs(); // Tạo thư mục nếu chưa tồn tại
            }

            // Gán tên file vào biến tĩnh hoặc sử dụng sau
                ChonFileAnhJFrame.setFileImage(selectedFile);
            // File đích (tên file giữ nguyên)
            File destFile = new File(destDir, selectedFile.getName());

            try {
                // Sao chép file từ vị trí gốc vào thư mục "/src/main/java/image/"
                java.nio.file.Files.copy(
                    selectedFile.toPath(),
                    destFile.toPath(),
                    java.nio.file.StandardCopyOption.REPLACE_EXISTING
                );

                // Thông báo thành công
                javax.swing.JOptionPane.showMessageDialog(this,
                    "File ảnh đã được lưu vào thư mục /src/main/java/image/: " + destFile.getAbsolutePath(),
                    "Thành công",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);

//                // Đóng cửa sổ
//                this.setVisible(false);

            } catch (java.io.IOException ex) {
                ex.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Lỗi khi sao chép file: " + ex.getMessage(),
                    "Lỗi",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Hiển thị thông báo lỗi nếu file không hợp lệ
            javax.swing.JOptionPane.showMessageDialog(this, 
                "File không phải là định dạng ảnh hợp lệ!", 
                "Lỗi", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    } else if (command.equals(javax.swing.JFileChooser.CANCEL_SELECTION)) {
        // Hiển thị thông báo nếu người dùng hủy chọn file
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Bạn đã hủy chọn file.", 
            "Thông báo", 
            javax.swing.JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jFileChooserFileAnhActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooserFileAnh;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
